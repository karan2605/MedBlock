{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kp/Desktop/Third Year/CS310 Project/CS310-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/kp/Desktop/Third Year/CS310 Project/CS310-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/kp/Desktop/Third Year/CS310 Project/CS310-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kp/Desktop/Third Year/CS310 Project/CS310-Project/src/components/CreateAccount/CreateAccount.js\";\n\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { Button } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport '../HomePage/Style.css';\nimport { useState } from \"react\";\nimport CreateAccount from '../../abis/CreateAccount.json';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar Web3 = require('web3');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n});\nvar state = {\n  contract: null,\n  web3: null,\n  buffer: null,\n  account: null\n};\n\nfunction loadWeb3() {\n  return _loadWeb.apply(this, arguments);\n}\n\nfunction _loadWeb() {\n  _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 3;\n            return window.ethereum.send('eth_requestAccounts');\n\n          case 3:\n            window.web3 = new Web3(window.ethereum);\n            return _context.abrupt(\"return\", true);\n\n          case 7:\n            if (!window.web3) {\n              _context.next = 11;\n              break;\n            }\n\n            window.web3 = new Web3(window.web3.currentProvider);\n            _context.next = 13;\n            break;\n\n          case 11:\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask');\n            return _context.abrupt(\"return\", false);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadWeb.apply(this, arguments);\n}\n\nfunction loadBlockchainData() {\n  return _loadBlockchainData.apply(this, arguments);\n}\n\nfunction _loadBlockchainData() {\n  _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var web3, networkId, accounts, networkData, contract;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            web3 = new Web3(window.ethereum);\n            _context2.next = 3;\n            return web3.eth.net.getId();\n\n          case 3:\n            networkId = _context2.sent;\n            _context2.next = 6;\n            return web3.eth.getAccounts();\n\n          case 6:\n            accounts = _context2.sent;\n            state.account = accounts[0];\n            console.log(state.accounts);\n            networkData = CreateAccount.networks[networkId];\n\n            if (networkData) {\n              contract = new web3.eth.Contract(CreateAccount.abi, networkData.address);\n              state.contract = contract;\n            } else {\n              window.alert('Smart contract not deployed to detected network.');\n            }\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loadBlockchainData.apply(this, arguments);\n}\n\nvar onSubmit = function onSubmit(event) {\n  event.preventDefault();\n  var data = new File([JSON.stringify({\n    id: event.target[0].value,\n    firstName: event.target[1].value,\n    lastName: event.target[2].value,\n    dob: event.target[3].value,\n    email: event.target[4].value,\n    gp: event.target[5].value,\n    bloodGroup: event.target[6].value,\n    existingHealth: event.target[7].value\n  })], event.target[0].value + \".json\");\n  ipfs.add(data, function (error, result) {\n    console.log('Ipfs result', result);\n\n    if (error) {\n      console.error(error);\n      return;\n    }\n\n    state.contract.methods.setHash(result[0].hash).send({\n      from: state.account\n    });\n  });\n};\n\nvar Createaccount = function Createaccount() {\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      field = _useState4[0],\n      setField = _useState4[1];\n\n  loadWeb3();\n  loadBlockchainData();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"navbar navbar-expand-lg navbar-dark bg-dark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container px-lg-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"navbar-brand\",\n    href: \" \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 54\n    }\n  }), \"  MedBlock\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"navbar-toggler\",\n    type: \"button\",\n    \"data-bs-toggle\": \"collapse\",\n    \"data-bs-target\": \"#navbarSupportedContent\",\n    \"aria-controls\": \"navbarSupportedContent\",\n    \"aria-expanded\": \"false\",\n    \"aria-label\": \"Toggle navigation\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navbar-toggler-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 229\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collapse navbar-collapse\",\n    id: \"navbarSupportedContent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"navbar-nav ms-auto mb-2 mb-lg-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"nav-link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 50\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    className: \"nav-link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 50\n    }\n  }, \"Login\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-5 col-md-5 col-sm-5 container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-4 p-lg-5 bg-light rounded-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-5 fw-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \"Create Account\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, \"Complete the form below to create a MedBlock account\"), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"display-10 fw-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Personal Details\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formUniqueId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, \"Unique Identifier\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: state.account,\n    name: \"Id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicFirstName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"First Name\",\n    name: \"fname\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicLastName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Last Name\",\n    name: \"lname\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"DOB\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, \"Date of Birth\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"date\",\n    name: \"dob\",\n    placeholder: \"Date of Birth\",\n    value: date,\n    onChange: function onChange(e) {\n      return setDate(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicEmail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    name: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"display-10 fw-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, \"Medical Details\"), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicGpName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"GP Name\",\n    name: \"gp\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicBlood\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Blood Group\",\n    name: \"bloodgroup\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"my_multiselect_field\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, \"Existing Health Conditions\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    multiple: true,\n    value: field,\n    onChange: function onChange(e) {\n      return setField([].slice.call(e.target.selectedOptions).map(function (item) {\n        return item.value;\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"field1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, \"Field 1\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"field2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, \"Field 2\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"field3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  }, \"Field 3\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, \"Create Account\"))))));\n};\n\nexport default Createaccount;","map":{"version":3,"sources":["/Users/kp/Desktop/Third Year/CS310 Project/CS310-Project/src/components/CreateAccount/CreateAccount.js"],"names":["React","Form","Button","Link","useState","CreateAccount","ipfsClient","require","Web3","ipfs","host","port","protocol","state","contract","web3","buffer","account","loadWeb3","window","ethereum","send","currentProvider","alert","loadBlockchainData","eth","net","getId","networkId","getAccounts","accounts","console","log","networkData","networks","Contract","abi","address","onSubmit","event","preventDefault","data","File","JSON","stringify","id","target","value","firstName","lastName","dob","email","gp","bloodGroup","existingHealth","add","error","result","methods","setHash","hash","from","Createaccount","Date","date","setDate","field","setField","e","slice","call","selectedOptions","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { Button } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport '../HomePage/Style.css';\nimport { useState } from \"react\";\nimport CreateAccount from '../../abis/CreateAccount.json';\n\nconst ipfsClient = require('ipfs-http-client')\nconst Web3 = require('web3');\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\n\nconst state = {\n    contract: null,\n    web3: null,\n    buffer: null,\n    account: null\n}\n\nasync function loadWeb3() {\n    if (window.ethereum) {\n        await window.ethereum.send('eth_requestAccounts');\n        window.web3 = new Web3(window.ethereum);\n        return true;\n    }\n    else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n        window.alert('Non-Ethereum browser detected. You should consider trying MetaMask')\n        return false;\n    }\n}\n\nasync function loadBlockchainData() {\n    const web3 = new Web3(window.ethereum);\n    const networkId = await web3.eth.net.getId();\n    const accounts = await web3.eth.getAccounts();\n    state.account = accounts[0];\n    console.log(state.accounts)\n    const networkData = CreateAccount.networks[networkId];\n    if(networkData) {\n      const contract = new web3.eth.Contract(CreateAccount.abi, networkData.address);\n      state.contract = contract;\n    } \n    else {\n      window.alert('Smart contract not deployed to detected network.');\n    }\n  }\n\nconst onSubmit = (event) => {\n    event.preventDefault();\n\n    const data = new File([JSON.stringify({\n        id: event.target[0].value,\n        firstName: event.target[1].value,\n        lastName: event.target[2].value,\n        dob: event.target[3].value,\n        email: event.target[4].value,\n        gp: event.target[5].value,\n        bloodGroup: event.target[6].value,\n        existingHealth: event.target[7].value\n    })], event.target[0].value+\".json\");\n\n    ipfs.add(data, (error, result) => {\n        console.log('Ipfs result', result)\n        if(error) {\n          console.error(error)\n          return\n        }\n        state.contract.methods.setHash(result[0].hash).send({ from: state.account })\n    })\n};\n\nconst Createaccount = () => {\n    const [date, setDate] = useState(new Date());\n    const [field, setField] = useState([]);\n    loadWeb3()\n    loadBlockchainData()\n\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <div className=\"container px-lg-5\">\n                <a className=\"navbar-brand\" href=\" \"><i className=\"bi bi-box\"></i>  MedBlock</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\">Home</Link></li>\n                        <li className=\"nav-item\"><Link to='/login' className=\"nav-link\">Login</Link></li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n\n            <div className=\"col-lg-5 col-md-5 col-sm-5 container\">\n                <div className=\"d-flex justify-content-center align-items-center\">\n                    <div className=\"p-4 p-lg-5 bg-light rounded-3\">\n                        \n                        <h1 className=\"display-5 fw-bold\">Create Account</h1>\n                        <p>Complete the form below to create a MedBlock account</p>\n                        <h2 className=\"display-10 fw-bold\">Personal Details</h2>\n\n                        <Form onSubmit={onSubmit}>\n                            <Form.Group className=\"mb-3\" controlId=\"formUniqueId\">\n                                <Form.Label>Unique Identifier</Form.Label>\n                                <Form.Control type=\"text\" placeholder={ state.account } name=\"Id\" />\n                            </Form.Group>\n\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicFirstName\">\n                                <Form.Control type=\"text\" placeholder=\"First Name\" name=\"fname\"/>\n                            </Form.Group>\n\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicLastName\">\n                                <Form.Control type=\"text\" placeholder=\"Last Name\" name=\"lname\"/>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"DOB\">\n                            <Form.Label>Date of Birth</Form.Label>\n                            <Form.Control\n                                type=\"date\"\n                                name=\"dob\"\n                                placeholder=\"Date of Birth\"\n                                value={date}\n                                onChange={(e) => setDate(e.target.value)}\n                            />\n                            </Form.Group>\n\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                <Form.Control type=\"email\" placeholder=\"Email Address\" name=\"email\"/>\n                            </Form.Group>\n\n                            <h2 className=\"display-10 fw-bold\">Medical Details</h2>\n\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicGpName\">\n                                <Form.Control type=\"text\" placeholder=\"GP Name\" name=\"gp\"/>\n                            </Form.Group>\n\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicBlood\">\n                                <Form.Control type=\"text\" placeholder=\"Blood Group\" name=\"bloodgroup\"/>\n                            </Form.Group>\n                            \n                            <Form.Group controlId=\"my_multiselect_field\">\n                            <Form.Label>Existing Health Conditions</Form.Label>\n                            <Form.Control as=\"select\" multiple value={field} onChange={e => setField([].slice.call(e.target.selectedOptions).map(item => item.value))}>\n                                <option value=\"field1\">Field 1</option>\n                                <option value=\"field2\">Field 2</option>\n                                <option value=\"field3\">Field 3</option>\n                            </Form.Control>\n                            </Form.Group>\n                            <br></br>\n                            <Button variant=\"danger\" type=\"submit\">\n                                Create Account\n                            </Button>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )   \n};\n\nexport default Createaccount;"]},"metadata":{},"sourceType":"module"}